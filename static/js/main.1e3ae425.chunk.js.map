{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/classes/AnimatedBlob.js","js/functions/ColourCalculators.js","audio/blobs-no-3.ogg","audio/blobs-no-3.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","_jsxs","id","className","xmlns","height","viewBox","width","children","_jsx","d","fill","AnimatedBlob","constructor","p","x","y","parseSVGPath","pathData","commands","match","pathArray","cmd","command","charAt","params","slice","split","map","Number","push","this","speed","size","growth","parseInt","random","edges","seed","fillHue","strokeHue","time","timeSpeed","whiteStroke","Math","path","blobshape","update","perturbVertex","index","sin","cos","draw","translateX","translateY","translate","stroke","beginShape","i","length","vertex","quadraticVertex","perturbedX","perturbedY","perturbedX1","perturbedY1","perturbedX2","perturbedY2","endShape","CLOSE","pop","TriadicColourCalculator","hue","saturation","arguments","undefined","brightness","set","colour","color","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","scheduleCueSet","noteSet2","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","note","ticks","addCue","animatedBlobs","blobsArray","setup","createCanvas","colorMode","HSB","background","isPlaying","strokeWeight","blob","colourSet","divisor","drawBlob","_getHue","sizes","maxEdges","executeCueSet1","_ref","tries","isOverlapping","newCircle","radius","includes","existingCircle","dist","executeCueSet2","_ref2","hasStarted","mousePressed","pause","currentTime","buffer","duration","reset","dataLayer","title","location","href","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.1e3ae425.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","import blobshape from \"blobshape\";\r\n\r\nexport default class AnimatedBlob {\r\n    constructor(p, x, y) {\r\n        this.p = p;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.speed = 8;\r\n        this.size = p.width / 8;\r\n        this.growth = parseInt(p.random(3, 9));\r\n        this.edges = parseInt(p.random(16, 32));\r\n        this.seed = p.random(1, 100);\r\n        this.fillHue = p.random(0, 360);\r\n        this.strokeHue = p.random(0, 360);\r\n        this.time = 0; // Initialize time for vertex animation\r\n        this.timeSpeed = 0.05; // Controls animation speed\r\n        this.whiteStroke = Math.random() < 0.5;\r\n\r\n        const { path } = blobshape({\r\n            size: this.size,\r\n            growth: this.growth,\r\n            edges: this.edges,\r\n            seed: this.seed\r\n        });\r\n        this.pathArray = this.parseSVGPath(path);\r\n    }\r\n\r\n    parseSVGPath = (pathData) => {\r\n        let commands = pathData.match(/[a-df-z][^a-df-z]*/gi);\r\n        let pathArray = [];\r\n        \r\n        for (let cmd of commands) {\r\n            let command = cmd.charAt(0);\r\n            let params = cmd.slice(1).split(/[\\s,]+/).map(Number);\r\n            pathArray.push([command, ...params]);\r\n        }\r\n        \r\n        return pathArray;\r\n    }\r\n\r\n    update() {\r\n        // Increase time for continuous animation\r\n        this.time += this.timeSpeed;\r\n\r\n        // You can also update size if desired, but vertex animation alone is enough\r\n        this.size += this.speed;\r\n\r\n        // Recalculate blob path with vertex perturbation\r\n        const { path } = blobshape({\r\n            size: this.size,\r\n            growth: this.growth,\r\n            edges: this.edges,\r\n            seed: this.seed\r\n        });\r\n        this.pathArray = this.parseSVGPath(path);\r\n    }\r\n\r\n    perturbVertex(x, y, index) {\r\n        // Perturb the vertex position using a sine or noise function based on time and vertex index\r\n        let offsetX = Math.sin(this.time + index) * 10; // Adjust '10' for more/less perturbation\r\n        let offsetY = Math.cos(this.time + index) * 10; // Adjust '10' for more/less perturbation\r\n        return [x + offsetX, y + offsetY];\r\n    }\r\n\r\n    draw() {\r\n        const translateX = this.x - this.size / 2;\r\n        const translateY = this.y - this.size / 2;\r\n\r\n        this.p.push();\r\n        this.p.translate(translateX, translateY);\r\n        this.p.fill(this.fillHue, 100, 100, 0.33);\r\n        if(this.whiteStroke) {\r\n            this.p.stroke(this.strokeHue, 0, 100, 1);\r\n        }\r\n        else {\r\n            this.p.stroke(this.strokeHue, 100, 100, 0.66);\r\n        }\r\n        this.p.beginShape();\r\n\r\n        for (let i = 0; i < this.pathArray.length; i++) {\r\n            let cmd = this.pathArray[i];\r\n            let command = cmd[0];\r\n            let params = cmd.slice(1);\r\n\r\n            // Skip perturbing for the first and last vertices\r\n            if ((i < 2 || i > this.pathArray.length - 3) && command === 'M') {\r\n                this.p.vertex(params[0], params[1]);  // Draw without perturbation\r\n            } else if ((i < 2 || i > this.pathArray.length - 3) && command === 'Q') {\r\n                this.p.quadraticVertex(params[0], params[1], params[2], params[3]);  // No perturbation\r\n            } else {\r\n                // Perturb the inner vertices as before\r\n                if (command === 'M') {\r\n                    let [perturbedX, perturbedY] = this.perturbVertex(params[0], params[1], i);\r\n                    this.p.vertex(perturbedX, perturbedY);\r\n                } else if (command === 'Q') {\r\n                    let [perturbedX1, perturbedY1] = this.perturbVertex(params[0], params[1], i);\r\n                    let [perturbedX2, perturbedY2] = this.perturbVertex(params[2], params[3], i + 1);\r\n                    this.p.quadraticVertex(perturbedX1, perturbedY1, perturbedX2, perturbedY2);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.p.endShape(this.p.CLOSE);\r\n        this.p.translate(-translateX, -translateY);\r\n        this.p.pop();\r\n    }\r\n}\r\n","function TetradicColourCalculator(p5, hue, saturation = 100, brightness = 100, alpha = 1) {\n    let set = [];\n    let i = 0;\n    while(i < 4){\n        hue = hue + i * 90;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          alpha\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction TriadicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 3){\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        hue = hue + 120 < 360 ? hue + 120 : hue - 240;\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction ComplementaryColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 2){\n        hue = hue + i * 180;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nexport { TetradicColourCalculator, TriadicColourCalculator, ComplementaryColourCalculator };","export default __webpack_public_path__ + \"static/media/blobs-no-3.c9fce845.ogg\";","export default __webpack_public_path__ + \"static/media/blobs-no-3.549892b8.mid\";","import React, { useRef, useEffect } from \"react\";\r\nimport \"./helpers/Globals\";\r\nimport \"p5/lib/addons/p5.sound\";\r\nimport * as p5 from \"p5\";\r\nimport { Midi } from '@tonejs/midi'\r\nimport PlayIcon from './functions/PlayIcon.js';\r\nimport AnimatedBlob from './classes/AnimatedBlob.js';\r\n\r\nimport blobshape from \"blobshape\";\r\nimport { TriadicColourCalculator } from './functions/ColourCalculators';\r\n\r\nimport audio from \"../audio/blobs-no-3.ogg\";\r\nimport midi from \"../audio/blobs-no-3.mid\";\r\n\r\n/**\r\n * Blobs No. 3\r\n */\r\nconst P5SketchWithAudio = () => {\r\n    const sketchRef = useRef();\r\n\r\n    const Sketch = p => {\r\n\r\n        p.canvas = null;\r\n\r\n        p.canvasWidth = window.innerWidth;\r\n\r\n        p.canvasHeight = window.innerHeight;\r\n\r\n        p.audioLoaded = false;\r\n\r\n        p.player = null;\r\n\r\n        p.PPQ = 3840 * 4;\r\n\r\n        p.loadMidi = () => {\r\n            Midi.fromUrl(midi).then(\r\n                function(result) {\r\n                    console.log(result);\r\n                    const noteSet1 = result.tracks[19].notes; // Wave Layers Edition - Mallet Bass\r\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\r\n                    const noteSet2 = result.tracks[21].notes; \r\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2'); // Europa - Blower Bass\r\n                    p.audioLoaded = true;\r\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\r\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\r\n                }\r\n            );\r\n            \r\n        }\r\n\r\n        p.preload = () => {\r\n            p.song = p.loadSound(audio, p.loadMidi);\r\n            p.song.onended(p.logCredits);\r\n        }\r\n\r\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\r\n            let lastTicks = -1,\r\n                currentCue = 1;\r\n            for (let i = 0; i < noteSet.length; i++) {\r\n                const note = noteSet[i],\r\n                    { ticks, time } = note;\r\n                if(ticks !== lastTicks || poly){\r\n                    note.currentCue = currentCue;\r\n                    p.song.addCue(time, p[callbackName], note);\r\n                    lastTicks = ticks;\r\n                    currentCue++;\r\n                }\r\n            }\r\n        } \r\n\r\n        p.animatedBlobs = [];\r\n\r\n        p.blobsArray = [];\r\n\r\n        p.setup = () => {\r\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\r\n            p.colorMode(p.HSB);\r\n            p.background(0, 0, 0);\r\n        }\r\n\r\n        p.draw = () => {\r\n            if(p.audioLoaded && p.song.isPlaying()){\r\n                p.background(0, 0, 0);\r\n                p.strokeWeight(4);\r\n\r\n                for (let i = 0; i < p.animatedBlobs.length; i++) {\r\n                    const blob = p.animatedBlobs[i];\r\n                    blob.draw();\r\n                    blob.update();\r\n                }\r\n\r\n                p.strokeWeight(2);\r\n\r\n                for (let i = 0; i < p.blobsArray.length; i++) {\r\n                    const blob = p.blobsArray[i];\r\n                    const { x, y, growth, edges, colourSet, divisor, seed, whiteStroke } = blob;\r\n\r\n                    p.drawBlob(x, y, (p.width / (divisor * 0.9)), growth, edges, colourSet[0], seed, whiteStroke);\r\n                    p.drawBlob(x, y, (p.width / (divisor * 1.2)), growth, edges, colourSet[1], seed, false);\r\n                    p.drawBlob(x, y, (p.width / (divisor * 1.5)), growth, edges, colourSet[2], seed, whiteStroke);\r\n                }\r\n            }\r\n        }\r\n\r\n        p.drawBlob = (x, y, size, growth, edges, color, seed, whiteStroke) => {\r\n            const { path } = blobshape({ size: size, growth: growth, edges: edges, seed: seed });\r\n            const pathArray = p.parseSVGPath(path);\r\n            p.translate(x - (size / 2), y - (size / 2));\r\n            p.fill(\r\n                color._getHue(),\r\n                100,\r\n                100,\r\n                0.5\r\n            );\r\n            p.stroke(\r\n                color._getHue(),\r\n                whiteStroke ? 0 : 100,\r\n                100,\r\n                1\r\n            );\r\n            p.beginShape();\r\n            for (let cmd of pathArray) {\r\n                let command = cmd[0];\r\n                let params = cmd.slice(1);\r\n                \r\n                if (command === 'M') {\r\n                    p.vertex(params[0], params[1]);\r\n                } else if (command === 'Q') {\r\n                    p.quadraticVertex(params[0], params[1], params[2], params[3]);\r\n                }\r\n            }\r\n            p.endShape(p.CLOSE);\r\n            p.translate(-x + (size / 2), -y + (size / 2));\r\n        }\r\n\r\n        p.parseSVGPath = (pathData) => {\r\n            let commands = pathData.match(/[a-df-z][^a-df-z]*/gi);\r\n            let pathArray = [];\r\n            \r\n            for (let cmd of commands) {\r\n                let command = cmd.charAt(0);\r\n                let params = cmd.slice(1).split(/[\\s,]+/).map(Number);\r\n                pathArray.push([command, ...params]);\r\n            }\r\n            \r\n            return pathArray;\r\n        }\r\n\r\n        p.sizes = [8, 12, 16, 24, 32];\r\n        p.maxEdges = 16;\r\n\r\n        p.executeCueSet1 = ({currentCue}) => {\r\n            if(currentCue === 37){\r\n                p.blobsArray = [];\r\n                p.sizes = [8, 12, 16];\r\n                p.maxEdges = 32;\r\n            }\r\n            let tries = 0;\r\n            const maxTries = 100;  // Limit the number of attempts to avoid infinite loops\r\n\r\n            let isOverlapping = true;\r\n            while (isOverlapping && tries < maxTries) {\r\n                const divisor = p.random(p.sizes);\r\n                const hue = p.random(0, 360);\r\n                const newCircle = {\r\n                    x: p.random(0, p.width),\r\n                    y: p.random(0, p.height),\r\n                    radius: p.width / (divisor * 0.9) / 2,\r\n                    growth: parseInt(p.random(3, 9)),\r\n                    edges: parseInt(p.random(8, p.maxEdges)),\r\n                    colourSet: TriadicColourCalculator(p, hue),\r\n                    divisor: divisor,\r\n                    seed: p.random(1, 10),\r\n                    whiteStroke: [9, 10, 11, 0].includes(currentCue % 12)\r\n                };\r\n\r\n                isOverlapping = false;\r\n\r\n                // Check against all existing circles for overlap\r\n                for (let i = 0; i < p.blobsArray.length; i++) {\r\n                    const existingCircle = p.blobsArray[i];\r\n                    const dist = p.dist(newCircle.x, newCircle.y, existingCircle.x, existingCircle.y);\r\n                    if (dist < newCircle.radius + existingCircle.radius) {\r\n                        isOverlapping = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                tries++;\r\n                // If no overlap, add it to the array\r\n                if (!isOverlapping) {\r\n                    p.blobsArray.push(newCircle);\r\n                }\r\n            }\r\n\r\n            // Optionally handle case where maxTries was reached without success\r\n            if (tries >= maxTries) {\r\n                console.log(\"Max attempts reached. Could not place the circle without overlap.\");\r\n            }\r\n        };\r\n\r\n        p.executeCueSet2 = ({currentCue}) => {\r\n            if(currentCue % 12 === 1) {\r\n                p.animatedBlobs = [];\r\n            }\r\n            const x = p.random(0, p.width);\r\n            const y = p.random(0, p.height);\r\n            p.animatedBlobs.push(\r\n                new AnimatedBlob(p, x, y)\r\n            );\r\n        }\r\n\r\n\r\n        p.hasStarted = false;\r\n\r\n        p.mousePressed = () => {\r\n            if(p.audioLoaded){\r\n                if (p.song.isPlaying()) {\r\n                    p.song.pause();\r\n                } else {\r\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\r\n                        p.reset();\r\n                        if (typeof window.dataLayer !== typeof undefined){\r\n                            window.dataLayer.push(\r\n                                { \r\n                                    'event': 'play-animation',\r\n                                    'animation': {\r\n                                        'title': document.title,\r\n                                        'location': window.location.href,\r\n                                        'action': 'replaying'\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\r\n                    p.canvas.addClass(\"fade-in\");\r\n                    p.song.play();\r\n                    if (typeof window.dataLayer !== typeof undefined && !p.hasStarted){\r\n                        window.dataLayer.push(\r\n                            { \r\n                                'event': 'play-animation',\r\n                                'animation': {\r\n                                    'title': document.title,\r\n                                    'location': window.location.href,\r\n                                    'action': 'start playing'\r\n                                }\r\n                            }\r\n                        );\r\n                        p.hasStarted = false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        p.creditsLogged = false;\r\n\r\n        p.logCredits = () => {\r\n            if (\r\n                !p.creditsLogged &&\r\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\r\n            ) {\r\n                p.creditsLogged = true;\r\n                    console.log(\r\n                    \"Music By: http://labcat.nz/\",\r\n                    \"\\n\",\r\n                    \"Animation By: https://github.com/LABCAT/\"\r\n                );\r\n                p.song.stop();\r\n            }\r\n        };\r\n\r\n        p.reset = () => {\r\n\r\n        }\r\n\r\n        p.updateCanvasDimensions = () => {\r\n            p.canvasWidth = window.innerWidth;\r\n            p.canvasHeight = window.innerHeight;\r\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\r\n        }\r\n\r\n        if (window.attachEvent) {\r\n            window.attachEvent(\r\n                'onresize',\r\n                function () {\r\n                    p.updateCanvasDimensions();\r\n                }\r\n            );\r\n        }\r\n        else if (window.addEventListener) {\r\n            window.addEventListener(\r\n                'resize',\r\n                function () {\r\n                    p.updateCanvasDimensions();\r\n                },\r\n                true\r\n            );\r\n        }\r\n        else {\r\n            //The browser does not support Javascript event binding\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        new p5(Sketch, sketchRef.current);\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={sketchRef}>\r\n            <PlayIcon />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default P5SketchWithAudio;\r\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}